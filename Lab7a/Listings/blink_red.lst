


ARM Macro Assembler    Page 1 


    1 00000000         ;   Program Blink_red.s
    2 00000000         ;   Swicht with Blink Red, Blue and Green
    3 00000000         ;   Roman Lopez B.
    4 00000000         ;   September 5, 2020
    5 00000000         ;   !WORKs
    6 00000000                 IMPORT           Board_Init
    7 00000000                 IMPORT           GPIO_PORTF_DATA_R
    8 00000000         
    9 00000000 0000FFFF 
                       M       EQU              0x00FFFF    ;Delay constant
   10 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   11 00000000                 THUMB
   12 00000000                 EXPORT           Start
   13 00000000         Start
   14 00000000         ;-------------------------------------------------------
                       ---------
   15 00000000 F7FF FFFE       BL               Board_Init  ; initialize PF0 an
                                                            d PF4 and make them
                                                             inputs
   16 00000004 4836    Loop1   LDR              R0,=GPIO_PORTF_DATA_R ;R0 Point
                                                             PORTF Data
   17 00000006 F04F 0100       MOV              R1,#0x0
   18 0000000A 7001            STRB             R1,[R0]     ;Turn Off The LEDs
   19 0000000C         
   20 0000000C 4C34    Loop2   LDR              R4,=GPIO_PORTF_DATA_R ;R0 Point
                                                             PORTF Data
   21 0000000E 7825            LDRB             R5,[R4]     ;Get switch Status
   22 00000010 F005 0511       AND              R5,R5,#0x11 ;and R4 & b00010001
                                                            
   23 00000014 2D01            CMP              R5,#0x01    ;Switch1 =0, and Sw
                                                            itch2 =1?
   24 00000016 D004            BEQ              Loop3       ;If no, Read againg
                                                            
   25 00000018 2D10            CMP              R5,#0x10    ;Switch1= 1 and Swi
                                                            ch2 =0?
   26 0000001A D005            BEQ              Loop4       ;If no, Read againg
                                                            
   27 0000001C 2D00            CMP              R5,#0x00    ;Switch1 =0 and Swi
                                                            tch2 =0?
   28 0000001E D006            BEQ              Loop5       ;If no, Read againg
                                                            
   29 00000020 E7F4            B                Loop2
   30 00000022         Loop3
   31 00000022 F000 F807       BL               RED_LED
   32 00000026 E7F1            B                Loop2
   33 00000028         Loop4
   34 00000028 F000 F816       BL               BLUE_LED
   35 0000002C E7EE            B                Loop2
   36 0000002E         Loop5
   37 0000002E F000 F825       BL               GREEN_LED
   38 00000032 E7EB            B                Loop2
   39 00000034         ;Subroutine to Turn on the RED LED
   40 00000034         RED_LED
   41 00000034 B506            PUSH             {R1,R2,LR}  ;Push into stak Reg
                                                            isters
   42 00000036 F04F 0102       MOV              R1,#0x02
   43 0000003A 6001            STR              R1,[R0]     ;Turn on Red LED
   44 0000003C F04F 0305       MOV              R3,#5



ARM Macro Assembler    Page 2 


   45 00000040 F000 F840       BL               Delay       ;Delay one second
   46 00000044 F04F 0100       MOV              R1,#0x0
   47 00000048 6001            STR              R1,[R0]     ;Turn off Red LED
   48 0000004A F04F 0305       MOV              R3,#5
   49 0000004E F000 F839       BL               Delay       ;Delay one second
   50 00000052 E8BD 4006       POP              {R1,R2,LR}
   51 00000056 4770            BX               LR          ;Return from Subrou
                                                            tine
   52 00000058         
   53 00000058         ;Subroutine to Turn on the Blue LED
   54 00000058         BLUE_LED
   55 00000058 B506            PUSH             {R1,R2,LR}  ;Push into stak Reg
                                                            isters
   56 0000005A F04F 0104       MOV              R1,#0x04
   57 0000005E 6001            STR              R1,[R0]     ;Turn on Red LED
   58 00000060 F04F 0305       MOV              R3,#5
   59 00000064 F000 F82E       BL               Delay       ;Delay one second
   60 00000068 F04F 0100       MOV              R1,#0x0
   61 0000006C 6001            STR              R1,[R0]     ;Turn off Red LED
   62 0000006E F04F 0305       MOV              R3,#5
   63 00000072 F000 F827       BL               Delay       ;Delay one second
   64 00000076 E8BD 4006       POP              {R1,R2,LR}
   65 0000007A 4770            BX               LR          ;Return from Subrou
                                                            tine
   66 0000007C         GREEN_LED
   67 0000007C B506            PUSH             {R1,R2,LR}  ;Push into stak Reg
                                                            isters
   68 0000007E F04F 0108       MOV              R1,#0x08
   69 00000082 6001            STR              R1,[R0]     ;Turn on Red LED
   70 00000084 F04F 0305       MOV              R3,#5
   71 00000088 F000 F81C       BL               Delay       ;Delay one second
   72 0000008C F04F 0100       MOV              R1,#0x0
   73 00000090 6001            STR              R1,[R0]     ;Turn off Red LED
   74 00000092 F04F 0305       MOV              R3,#5
   75 00000096 F000 F815       BL               Delay       ;Delay one second
   76 0000009A E8BD 4006       POP              {R1,R2,LR}
   77 0000009E 4770            BX               LR          ;Return from Subrou
                                                            tine
   78 000000A0         WHITE_LED
   79 000000A0 B506            PUSH             {R1,R2,LR}  ;Push into stak Reg
                                                            isters
   80 000000A2 F04F 010E       MOV              R1,#0x0E
   81 000000A6 6001            STR              R1,[R0]     ;Turn on Red LED
   82 000000A8 F04F 0305       MOV              R3,#5
   83 000000AC F000 F80A       BL               Delay       ;Delay one second
   84 000000B0 F04F 0100       MOV              R1,#0x0
   85 000000B4 6001            STR              R1,[R0]     ;Turn off Red LED
   86 000000B6 F04F 0305       MOV              R3,#5
   87 000000BA F000 F803       BL               Delay       ;Delay one second
   88 000000BE E8BD 4006       POP              {R1,R2,LR}
   89 000000C2 4770            BX               LR          ;Return from Subrou
                                                            tine
   90 000000C4         
   91 000000C4         ;>>>>>> Subroutine Delay <<<<<<<<<<  
   92 000000C4         Delay
   93 000000C4 B50E            PUSH             {R1,R2,R3,LR}
   94 000000C6         Delay_Loop0
   95 000000C6 F64F 72FF       LDR              R2, =M      ;Set R2 =0x00FFFFFF
                                                            



ARM Macro Assembler    Page 3 


   96 000000CA         Delay_Loop1
   97 000000CA F1A2 0201       SUB              R2,#1
   98 000000CE 2A00            CMP              R2,#0x0
   99 000000D0 D1FB            BNE              Delay_Loop1
  100 000000D2         
  101 000000D2 F1A3 0301       SUB              R3,#1
  102 000000D6 2B00            CMP              R3,#0
  103 000000D8 D1F5            BNE              Delay_Loop0
  104 000000DA E8BD 400E       POP              {R1,R2,R3,LR}
  105 000000DE 4770            BX               LR
  106 000000E0         
  107 000000E0                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  108 000000E0                 END                          ; end of file
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\blink_red.d -o.\objects\blink_red.o -IC:\Keil_v5\A
RM\RV31\Inc -I.\RTE\_Target_1 -IC:\Users\rolopez\AppData\Local\Arm\Packs\ARM\CM
SIS\5.7.0\CMSIS\Core\Include -IC:\Users\rolopez\AppData\Local\Arm\Packs\Keil\TM
4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__
UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM 
SETA 1" --list=.\listings\blink_red.lst Blink_Red.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 10 in file Blink_Red.s
   Uses
      None
Comment: .text unused
BLUE_LED 00000058

Symbol: BLUE_LED
   Definitions
      At line 54 in file Blink_Red.s
   Uses
      At line 34 in file Blink_Red.s
Comment: BLUE_LED used once
Delay 000000C4

Symbol: Delay
   Definitions
      At line 92 in file Blink_Red.s
   Uses
      At line 45 in file Blink_Red.s
      At line 49 in file Blink_Red.s
      At line 59 in file Blink_Red.s
      At line 63 in file Blink_Red.s
      At line 71 in file Blink_Red.s
      At line 75 in file Blink_Red.s
      At line 83 in file Blink_Red.s
      At line 87 in file Blink_Red.s

Delay_Loop0 000000C6

Symbol: Delay_Loop0
   Definitions
      At line 94 in file Blink_Red.s
   Uses
      At line 103 in file Blink_Red.s
Comment: Delay_Loop0 used once
Delay_Loop1 000000CA

Symbol: Delay_Loop1
   Definitions
      At line 96 in file Blink_Red.s
   Uses
      At line 99 in file Blink_Red.s
Comment: Delay_Loop1 used once
GREEN_LED 0000007C

Symbol: GREEN_LED
   Definitions
      At line 66 in file Blink_Red.s
   Uses
      At line 37 in file Blink_Red.s
Comment: GREEN_LED used once
Loop1 00000004

Symbol: Loop1
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 16 in file Blink_Red.s
   Uses
      None
Comment: Loop1 unused
Loop2 0000000C

Symbol: Loop2
   Definitions
      At line 20 in file Blink_Red.s
   Uses
      At line 29 in file Blink_Red.s
      At line 32 in file Blink_Red.s
      At line 35 in file Blink_Red.s
      At line 38 in file Blink_Red.s

Loop3 00000022

Symbol: Loop3
   Definitions
      At line 30 in file Blink_Red.s
   Uses
      At line 24 in file Blink_Red.s
Comment: Loop3 used once
Loop4 00000028

Symbol: Loop4
   Definitions
      At line 33 in file Blink_Red.s
   Uses
      At line 26 in file Blink_Red.s
Comment: Loop4 used once
Loop5 0000002E

Symbol: Loop5
   Definitions
      At line 36 in file Blink_Red.s
   Uses
      At line 28 in file Blink_Red.s
Comment: Loop5 used once
RED_LED 00000034

Symbol: RED_LED
   Definitions
      At line 40 in file Blink_Red.s
   Uses
      At line 31 in file Blink_Red.s
Comment: RED_LED used once
Start 00000000

Symbol: Start
   Definitions
      At line 13 in file Blink_Red.s
   Uses
      At line 12 in file Blink_Red.s
Comment: Start used once
WHITE_LED 000000A0

Symbol: WHITE_LED
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 78 in file Blink_Red.s
   Uses
      None
Comment: WHITE_LED unused
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

M 0000FFFF

Symbol: M
   Definitions
      At line 9 in file Blink_Red.s
   Uses
      At line 95 in file Blink_Red.s
Comment: M used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Board_Init 00000000

Symbol: Board_Init
   Definitions
      At line 6 in file Blink_Red.s
   Uses
      At line 15 in file Blink_Red.s
Comment: Board_Init used once
GPIO_PORTF_DATA_R 00000000

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 7 in file Blink_Red.s
   Uses
      At line 16 in file Blink_Red.s
      At line 20 in file Blink_Red.s

2 symbols
354 symbols in table




ARM Macro Assembler    Page 1 


    1 00000000         ; Ports Init
    2 00000000         
    3 00000000         ; debugger out of the processor and make it permanently 
                       unable to be
    4 00000000         ; debugged or re-programmed.
    5 00000000         ;************************PortB Registers
    6 00000000 400053FC 
                       GPIO_PORTB_DATA_R
                               EQU              0x400053FC
    7 00000000 40005400 
                       GPIO_PORTB_DIR_R
                               EQU              0x40005400
    8 00000000 40005420 
                       GPIO_PORTB_AFSEL_R
                               EQU              0x40005420
    9 00000000 40005510 
                       GPIO_PORTB_PUR_R
                               EQU              0x40005510
   10 00000000 4000551C 
                       GPIO_PORTB_DEN_R
                               EQU              0x4000551C
   11 00000000 40005524 
                       GPIO_PORTB_CR_R
                               EQU              0x40005524
   12 00000000 40005528 
                       GPIO_PORTB_AMSEL_R
                               EQU              0x40005528
   13 00000000 4000552C 
                       GPIO_PORTB_PCTL_R
                               EQU              0x4000552C
   14 00000000         
   15 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   16 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   17 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   18 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   19 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   20 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   21 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   22 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   23 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   24 00000000 4C4F434B 



ARM Macro Assembler    Page 2 


                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   25 00000000         
   26 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   27 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   28 00000000 00000002 
                       SYSCTL_RCGC2_GPIOB
                               EQU              0x00000002  ; port B Clock Gati
                                                            ng Control
   29 00000000         
   30 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   31 00000000                 THUMB
   32 00000000                 EXPORT           GPIO_PORTF_DATA_R
   33 00000000                 EXPORT           GPIO_PORTB_DATA_R
   34 00000000                 EXPORT           PORTB_Init
   35 00000000                 EXPORT           PORTF_Init
   36 00000000         
   37 00000000         ;------------Board_Init------------
   38 00000000         ; Initialize GPIO Port F for negative logic switches
   39 00000000         
   40 00000000         ; disabled.
   41 00000000         ; Input: none
   42 00000000         ; Output: none
   43 00000000         ; Modifies: R0, R1
   44 00000000         PORTF_Init
   45 00000000         ; activate clock for Port F
   46 00000000 B503            PUSH             {R0,R1,LR}  ;Store register int
                                                            o the stack area
   47 00000002 492E            LDR              R1, =SYSCTL_RCGCGPIO_R ; R1 = &
                                                            SYSCTL_RCGCGPIO_R
   48 00000004 6808            LDR              R0, [R1]    ; R0 = [R1]
   49 00000006 F040 0020       ORR              R0, R0, #SYSCTL_RCGC2_GPIOF ; R
                                                            0 = R0|SYSCTL_RCGC2
                                                            _GPIOF
   50 0000000A 6008            STR              R0, [R1]    ; [R1] = R0
   51 0000000C BF00            NOP
   52 0000000E BF00            NOP
   53 00000010 BF00            NOP
   54 00000012 BF00            NOP                          ; allow time to fin
                                                            ish activating
   55 00000014         ; unlock the lock register
   56 00000014 492A            LDR              R1, =GPIO_PORTF_LOCK_R ; R1 = &
                                                            GPIO_PORTF_LOCK_R
   57 00000016 482B            LDR              R0, =GPIO_LOCK_KEY ; R0 = GPIO_
                                                            LOCK_KEY (unlock GP
                                                            IO Port F Commit Re
                                                            gister)
   58 00000018 6008            STR              R0, [R1]    ; [R1] = R0 = 0x4C4
                                                            F434B
   59 0000001A         ; set commit register
   60 0000001A 492B            LDR              R1, =GPIO_PORTF_CR_R ; R1 = &GP
                                                            IO_PORTF_CR_R



ARM Macro Assembler    Page 3 


   61 0000001C F04F 00FF       MOV              R0, #0xFF   ; R0 = 0x01 (enable
                                                             commit for PF0)
   62 00000020 6008            STR              R0, [R1]    ; [R1] = R0 = 0x1
   63 00000022         ; set direction register
   64 00000022 492A            LDR              R1, =GPIO_PORTF_DIR_R ; R1 = &G
                                                            PIO_PORTF_DIR_R
   65 00000024 F04F 000E       MOV              R0,#0X0E
   66 00000028 6008            STR              R0, [R1]    ; [R1] = R0
   67 0000002A         ; regular port function
   68 0000002A 4929            LDR              R1, =GPIO_PORTF_AFSEL_R ; R1 = 
                                                            &GPIO_PORTF_AFSEL_R
                                                            
   69 0000002C 6808            LDR              R0, [R1]    ; R0 = [R1]
   70 0000002E F04F 0000       MOV              R0,#0X00
   71 00000032 6008            STR              R0, [R1]    ; [R1] = R0
   72 00000034         ; put a delay here if you are seeing erroneous NMI
   73 00000034         ; enable pull-up resistors
   74 00000034 4927            LDR              R1, =GPIO_PORTF_PUR_R ; R1 = &G
                                                            PIO_PORTF_PUR_R
   75 00000036 F04F 0011       MOV              R0,#0X11
   76 0000003A 6008            STR              R0, [R1]    ; [R1] = R0
   77 0000003C         ; enable digital port
   78 0000003C 4926            LDR              R1, =GPIO_PORTF_DEN_R ; R1 = &G
                                                            PIO_PORTF_DEN_R
   79 0000003E F04F 00FF       MOV              R0,#0XFF
   80 00000042 6008            STR              R0, [R1]    ; [R1] = R0
   81 00000044         ; configure as GPIO
   82 00000044 4925            LDR              R1, =GPIO_PORTF_PCTL_R ; R1 = &
                                                            GPIO_PORTF_PCTL_R
   83 00000046 6808            LDR              R0, [R1]    ; R0 = [R1]
   84 00000048 F020 100F       BIC              R0, R0, #0x000F000F ; R0 = R0&~
                                                            0x000F000F (clear p
                                                            ort control field f
                                                            or PF0 and PF4)
   85 0000004C F100 0000       ADD              R0, R0, #0x00000000 ; R0 = R0+0
                                                            x00000000 (configur
                                                            e PF0 and PF4 as GP
                                                            IO)
   86 00000050 6008            STR              R0, [R1]    ; [R1] = R0
   87 00000052         ; disable analog functionality
   88 00000052 4923            LDR              R1, =GPIO_PORTF_AMSEL_R ; R1 = 
                                                            &GPIO_PORTF_AMSEL_R
                                                            
   89 00000054 F04F 0000       MOV              R0, #0      ; R0 = 0 (disable a
                                                            nalog functionality
                                                             on PF)
   90 00000058 6008            STR              R0, [R1]    ; [R1] = R0
   91 0000005A E8BD 4003       POP              {R0,R1,LR}  ;Recover register f
                                                            rom the stack area
   92 0000005E 4770            BX               LR          ; return
   93 00000060         
   94 00000060         ;------------PORTB_Init------------
   95 00000060         ; Initialize GPIO Port B for eight LEDs
   96 00000060         ; Input: none
   97 00000060         ; Output: none
   98 00000060         ; Modifies: R0, R1
   99 00000060         PORTB_Init
  100 00000060 B503            PUSH             {R0,R1,LR}  ;Store register int
                                                            o the stack area



ARM Macro Assembler    Page 4 


  101 00000062         ; activate clock for Port F
  102 00000062 4916            LDR              R1, =SYSCTL_RCGCGPIO_R ; R1 = &
                                                            SYSCTL_RCGCGPIO_R
  103 00000064 6808            LDR              R0, [R1]    ; R0 = [R1]
  104 00000066 F040 0002       ORR              R0, R0, #SYSCTL_RCGC2_GPIOB ; R
                                                            0 = R0|SYSCTL_RCGC2
                                                            _GPIOF
  105 0000006A 6008            STR              R0, [R1]    ; [R1] = R0
  106 0000006C BF00            NOP
  107 0000006E BF00            NOP
  108 00000070 BF00            NOP                          ; allow time to fin
                                                            ish activating
  109 00000072 BF00            NOP
  110 00000074         ; set commit register
  111 00000074 491B            LDR              R1, =GPIO_PORTB_CR_R ; R1 = &GP
                                                            IO_PORTB_CR_R
  112 00000076 F04F 00FF       MOV              R0, #0xFF   ; R0 = 0x01 (enable
                                                             commit for PF0)
  113 0000007A 6008            STR              R0, [R1]    ; [R1] = R0 = 0x1
  114 0000007C         ; set direction register
  115 0000007C 491A            LDR              R1, =GPIO_PORTB_DIR_R ; R1 = &G
                                                            PIO_PORTB_DIR_R
  116 0000007E F04F 00FF       MOV              R0,#0XFF
  117 00000082 6008            STR              R0, [R1]    ; [R1] = R0
  118 00000084         ; regular port function
  119 00000084 4919            LDR              R1, =GPIO_PORTB_AFSEL_R ; R1 = 
                                                            &GPIO_PORTB_AFSEL_R
                                                            
  120 00000086 6808            LDR              R0, [R1]    ; R0 = [R1]
  121 00000088 F04F 0000       MOV              R0,#0X00
  122 0000008C 6008            STR              R0, [R1]    ; [R1] = R0
  123 0000008E         ; put a delay here if you are seeing erroneous NMI
  124 0000008E         ; enable pull-up resistors
  125 0000008E 4918            LDR              R1, =GPIO_PORTB_PUR_R ; R1 = &G
                                                            PIO_PORTB_PUR_R
  126 00000090 F04F 0000       MOV              R0,#0X00
  127 00000094 6008            STR              R0, [R1]    ; [R1] = R0
  128 00000096         ; enable digital port
  129 00000096 4917            LDR              R1, =GPIO_PORTB_DEN_R ; R1 = &G
                                                            PIO_PORTB_DEN_R
  130 00000098 F04F 00FF       MOV              R0,#0XFF
  131 0000009C 6008            STR              R0, [R1]    ; [R1] = R0
  132 0000009E         ; configure as GPIO
  133 0000009E 4916            LDR              R1, =GPIO_PORTB_PCTL_R ; R1 = &
                                                            GPIO_PORTB_PCTL_R
  134 000000A0 6808            LDR              R0, [R1]    ; R0 = [R1]
  135 000000A2 F020 100F       BIC              R0, R0, #0x000F000F ; R0 = R0&~
                                                            0x000F000F (clear p
                                                            ort control field f
                                                            or PF0 and PF4)
  136 000000A6 F100 0000       ADD              R0, R0, #0x00000000 ; R0 = R0+0
                                                            x00000000 (configur
                                                            e PF0 and PF4 as GP
                                                            IO)
  137 000000AA 6008            STR              R0, [R1]    ; [R1] = R0
  138 000000AC         ; disable analog functionality
  139 000000AC 4913            LDR              R1, =GPIO_PORTB_AMSEL_R ; R1 = 
                                                            &GPIO_PORTB_AMSEL_R
                                                            



ARM Macro Assembler    Page 5 


  140 000000AE F04F 0000       MOV              R0, #0      ; R0 = 0 (disable a
                                                            nalog functionality
                                                             on PF)
  141 000000B2 6008            STR              R0, [R1]    ; [R1] = R0
  142 000000B4 E8BD 4003       POP              {R0,R1,LR}  ;Recover register f
                                                            rom the stack area
  143 000000B8 4770            BX               LR          ; return
  144 000000BA 00 00           ALIGN
  145 000000BC                 END
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025400 
              40025420 
              40025510 
              4002551C 
              4002552C 
              40025528 
              40005524 
              40005400 
              40005420 
              40005510 
              4000551C 
              4000552C 
              40005528 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\board_init.d -o.\objects\board_init.o -I.\RTE\_Tar
get_1 -IC:\Users\Rafael\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Incl
ude -IC:\Users\Rafael\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Includ
e\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 535" 
--predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine="_RTE_
 SETA 1" --list=.\listings\board_init.lst Board_Init.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 30 in file Board_Init.s
   Uses
      None
Comment: .text unused
PORTB_Init 00000060

Symbol: PORTB_Init
   Definitions
      At line 99 in file Board_Init.s
   Uses
      At line 34 in file Board_Init.s
Comment: PORTB_Init used once
PORTF_Init 00000000

Symbol: PORTF_Init
   Definitions
      At line 44 in file Board_Init.s
   Uses
      At line 35 in file Board_Init.s
Comment: PORTF_Init used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 24 in file Board_Init.s
   Uses
      At line 57 in file Board_Init.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTB_AFSEL_R 40005420

Symbol: GPIO_PORTB_AFSEL_R
   Definitions
      At line 8 in file Board_Init.s
   Uses
      At line 119 in file Board_Init.s
Comment: GPIO_PORTB_AFSEL_R used once
GPIO_PORTB_AMSEL_R 40005528

Symbol: GPIO_PORTB_AMSEL_R
   Definitions
      At line 12 in file Board_Init.s
   Uses
      At line 139 in file Board_Init.s
Comment: GPIO_PORTB_AMSEL_R used once
GPIO_PORTB_CR_R 40005524

Symbol: GPIO_PORTB_CR_R
   Definitions
      At line 11 in file Board_Init.s
   Uses
      At line 111 in file Board_Init.s
Comment: GPIO_PORTB_CR_R used once
GPIO_PORTB_DATA_R 400053FC

Symbol: GPIO_PORTB_DATA_R
   Definitions
      At line 6 in file Board_Init.s
   Uses
      At line 33 in file Board_Init.s
Comment: GPIO_PORTB_DATA_R used once
GPIO_PORTB_DEN_R 4000551C

Symbol: GPIO_PORTB_DEN_R
   Definitions
      At line 10 in file Board_Init.s
   Uses
      At line 129 in file Board_Init.s
Comment: GPIO_PORTB_DEN_R used once
GPIO_PORTB_DIR_R 40005400

Symbol: GPIO_PORTB_DIR_R
   Definitions
      At line 7 in file Board_Init.s
   Uses
      At line 115 in file Board_Init.s
Comment: GPIO_PORTB_DIR_R used once
GPIO_PORTB_PCTL_R 4000552C

Symbol: GPIO_PORTB_PCTL_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 13 in file Board_Init.s
   Uses
      At line 133 in file Board_Init.s
Comment: GPIO_PORTB_PCTL_R used once
GPIO_PORTB_PUR_R 40005510

Symbol: GPIO_PORTB_PUR_R
   Definitions
      At line 9 in file Board_Init.s
   Uses
      At line 125 in file Board_Init.s
Comment: GPIO_PORTB_PUR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 17 in file Board_Init.s
   Uses
      At line 68 in file Board_Init.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 22 in file Board_Init.s
   Uses
      At line 88 in file Board_Init.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 21 in file Board_Init.s
   Uses
      At line 60 in file Board_Init.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 15 in file Board_Init.s
   Uses
      At line 32 in file Board_Init.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 19 in file Board_Init.s
   Uses
      At line 78 in file Board_Init.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 16 in file Board_Init.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 64 in file Board_Init.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 20 in file Board_Init.s
   Uses
      At line 56 in file Board_Init.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 23 in file Board_Init.s
   Uses
      At line 82 in file Board_Init.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 18 in file Board_Init.s
   Uses
      At line 74 in file Board_Init.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGC2_GPIOB 00000002

Symbol: SYSCTL_RCGC2_GPIOB
   Definitions
      At line 28 in file Board_Init.s
   Uses
      At line 104 in file Board_Init.s
Comment: SYSCTL_RCGC2_GPIOB used once
SYSCTL_RCGC2_GPIOF 00000020

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 27 in file Board_Init.s
   Uses
      At line 49 in file Board_Init.s
Comment: SYSCTL_RCGC2_GPIOF used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 26 in file Board_Init.s
   Uses
      At line 47 in file Board_Init.s
      At line 102 in file Board_Init.s

21 symbols
361 symbols in table
